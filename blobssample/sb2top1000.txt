FROM tensorflow/tensorflow:1.15.0-gpu-py3
RUN apt update && apt install -y git wget unzip
RUN pip install --user stable-baselines imageio imageio-ffmpeg dataclasses pyyaml
RUN wget https://github.com/axelbr/racecar_gym/releases/download/tracks-v1.0.0/all.zip
RUN git clone https://github.com/axelbr/racecar_gym.git
RUN pip install --user -e racecar_gym/
RUN mv all.zip racecar_gym/models/scenes/ && cd racecar_gym/models/scenes/ && unzip all.zip
WORKDIR /app
COPY . .justafile;==========================================================
;
;   ██████╗  ██████╗ ██╗  ██╗   ██╗██████╗  █████╗ ██████╗
;   ██╔══██╗██╔═══██╗██║  ╚██╗ ██╔╝██╔══██╗██╔══██╗██╔══██╗
;   ██████╔╝██║   ██║██║   ╚████╔╝ ██████╔╝███████║██████╔╝
;   ██╔═══╝ ██║   ██║██║    ╚██╔╝  ██╔══██╗██╔══██║██╔══██╗
;   ██║     ╚██████╔╝███████╗██║   ██████╔╝██║  ██║██║  ██║
;   ╚═╝      ╚═════╝ ╚══════╝╚═╝   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝
;==========================================================
;
; Build: Surface Book 2
; Version: 2.0


[colors]
background = ${xrdb:color0:#222}
foreground = ${xrdb:color7:#222}
foreground-alt = ${xrdb:color7:#222}
primary = ${xrdb:color3:#222}
secondary = ${xrdb:color2:#222}
alert = ${xrdb:color3:#222}


[bar/new]
dpi = 192
;monitor = ${env:MONITOR:HDMI-1}
width = 100%
height = 60
;offset-x = 1%
;offset-y = 1%
radius = 0
fixed-center = true
background = ${colors.background}
foreground = ${colors.foreground}
line-size = none
line-color = #f00
border-size = 0
border-color = #00000000
padding-left = 0
padding-right = 0
module-margin-left = 1
module-margin-right = 1
bottom = false

; BAR FONTS
font-0 = "Ubuntu Regular:size=10;2"
font-1 = "Ubuntu Mono:size=10;3"
font-2 = "Font Awesome:style=Regular:pixelsize=12;1"
font-3 = "Font Awesome 5 Free:style=Solid:pixelsize=12;1"
font-4 = "Font Awesome 5 Brands:pixelsize=12;1"

; BAR MODULES
modules-left = bspwm i3 xwindow
modules-center = date
modules-right = eth wlan battery
enable-ipc = true
tray-position = right
tray-padding = 2
tray-background = ${colors.background}
tray-foreground = ${colors.primary}
wm-restack = bspwm
;wm-restack = i3
;override-redirect = true
scroll-up = bspwm-desknext
scroll-down = bspwm-deskprev
;scroll-up = i3wm-wsnext
;scroll-down = i3wm-wsprev
cursor-click = pointer
cursor-scroll = ns-resize


[module/xwindow]
type = internal/xwindow
label =| %title:0:50:...%


[module/xkeyboard]
type = internal/xkeyboard
blacklist-0 = num lock
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
label-layout = %layout%
label-indicator-padding = 2
label-indicator-margin = 1
label-indicator-background = ${colors.secondary}


[module/filesystem]
type = internal/fs
interval = 25
mount-0 = /
label-mounted = %{F#0a81f5}%mountpoint%%{F-}: %percentage_used%%
label-unmounted = %mountpoint% not mounted
label-unmounted-foreground = ${colors.foreground-alt}


[module/bspwm]
type = internal/bspwm
label-focused = %name%
label-focused-background = ${colors.primary}
label-focused-foreground = ${colors.background}
label-focused-padding = 2
label-occupied = %name%
label-occupied-padding = 2
label-urgent = %name%!
label-urgent-background = ${colors.alert}
label-urgent-padding = 2
label-empty =
label-empty-foreground = ${colors.foreground}
label-empty-padding = 2
; Separator in between workspaces
; label-separator = |



[module/mpd]
type = internal/mpd
format-online = <label-song>  <icon-prev> <icon-stop> <toggle> <icon-next>
icon-prev = 
icon-stop = 
icon-play = 
icon-pause = 
icon-next = 
label-song-maxlen = 25
label-song-ellipsis = true


[module/xbacklight]
type = internal/xbacklight
format = <label> <bar>
label = BL
bar-width = 10
bar-indicator = |
bar-indicator-foreground = #fff
bar-indicator-font = 2
bar-fill = ─
bar-fill-font = 2
bar-fill-foreground = #9f78e1
bar-empty = ─
bar-empty-font = 2
bar-empty-foreground = ${colors.foreground-alt}


[module/backlight-acpi]
inherit = module/xbacklight
type = internal/backlight
card = intel_backlight


[module/cpu]
type = internal/cpu
interval = 2
format-prefix = " "
format-prefix-foreground = ${colors.foreground}
label = %percentage:2%%


[module/memory]
type = internal/memory
interval = 2
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
label = %percentage_used%%


[module/wlan]
type = internal/network
interface = wlan0
interval = 3.0
format-connected = <ramp-signal> <label-connected>
format-connected-background = ${colors.background}
label-connected-foreground = ${colors.primary}
label-connected =  %local_ip%   %essid%
format-disconnected = <label-disconnected>
label-disconnected = Connecting %ifname% to network %essid%...
ramp-signal-0 = 
ramp-signal-1 = 
ramp-signal-2 = 
ramp-signal-3 = 
ramp-signal-4 = 
ramp-signal-foreground = ${colors.foreground-alt}


[module/eth]
type = internal/network
interface = eno1
interval = 3.0
format-connected-prefix = " "
format-connected-prefix-foreground = ${colors.foreground-alt}
label-connected =  %local_ip%
format-disconnected =
;format-disconnected = <label-disconnected>
;format-disconnected-underline = ${self.format-connected-underline}
;label-disconnected = %ifname% disconnected
;label-disconnected-foreground = ${colors.foreground-alt}


[module/date]
type = internal/date
interval = 5
date =
date-alt = "%m/%d/%y"
time = "%l:%M %p"
time-alt = %l:%M %p
format-prefix = 
format-prefix-foreground = ${colors.primary}
format-background = ${colors.background}
format-foreground = ${colors.primary}
label = %date% %time%


[module/pulseaudio]
type = internal/pulseaudio
format-volume = <label-volume> <bar-volume>
label-volume = VOL %percentage%%
label-volume-foreground = ${root.foreground}
label-muted = 🔇 muted
label-muted-foreground = #666
bar-volume-width = 10
bar-volume-foreground-0 = #55aa55
bar-volume-foreground-1 = #55aa55
bar-volume-foreground-2 = #55aa55
bar-volume-foreground-3 = #55aa55
bar-volume-foreground-4 = #55aa55
bar-volume-foreground-5 = #f5a70a
bar-volume-foreground-6 = #ff5555
bar-volume-gradient = false
bar-volume-indicator = |
bar-volume-indicator-font = 2
bar-volume-fill = ─
bar-volume-fill-font = 2
bar-volume-empty = ─
bar-volume-empty-font = 2
bar-volume-empty-foreground = ${colors.foreground-alt}


[module/alsa]
type = internal/alsa
format-volume = <label-volume> <bar-volume>
label-volume = VOL
label-volume-foreground = ${root.foreground}
format-muted-prefix = " "
format-muted-foreground = ${colors.foreground-alt}
label-muted = sound muted
bar-volume-width = 10
bar-volume-foreground-0 = #55aa55
bar-volume-foreground-1 = #55aa55
bar-volume-foreground-2 = #55aa55
bar-volume-foreground-3 = #55aa55
bar-volume-foreground-4 = #55aa55
bar-volume-foreground-5 = #f5a70a
bar-volume-foreground-6 = #ff5555
bar-volume-gradient = false
bar-volume-indicator = |
bar-volume-indicator-font = 2
bar-volume-fill = ─
bar-volume-fill-font = 2
bar-volume-empty = ─
bar-volume-empty-font = 2
bar-volume-empty-foreground = ${colors.foreground-alt}


[module/battery]
interval = 1.0
type = internal/battery
battery = BAT2
adapter = ADP1
full-at = 98
format-full = "<ramp-capacity> 100%  "
format-charging = "<ramp-capacity> <label-charging>  "
format-discharging = "<ramp-capacity> <label-discharging>  "

format-full-background = ${colors.primary}
format-full-foreground = ${colors.background}
format-charging-background = ${colors.primary}
format-charging-foreground = ${colors.background}
format-discharging-background = ${colors.background}
format-discharging-foreground = ${colors.primary}

ramp-capacity-0 = " "
ramp-capacity-1 = " "
ramp-capacity-2 = " "
ramp-capacity-3 = " "
ramp-capacity-4 = " "


[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 60
format = <ramp> <label>
format-warn = <ramp> <label-warn>
label = %temperature-c%
label-warn = %temperature-c%
label-warn-foreground = ${colors.secondary}
ramp-0 = 
ramp-1 = 
ramp-2 = 
ramp-foreground = ${colors.foreground-alt}


[module/powermenu]
type = custom/menu
expand-right = true
format-spacing = 1
label-open = 
label-open-foreground = ${colors.secondary}
label-close =  cancel
label-close-foreground = ${colors.secondary}
label-separator = |
label-separator-foreground = ${colors.foreground-alt}
menu-0-0 = reboot
menu-0-0-exec = menu-open-1
menu-0-1 = power off
menu-0-1-exec = menu-open-2
menu-1-0 = cancel
menu-1-0-exec = menu-open-0
menu-1-1 = reboot
menu-1-1-exec = sudo reboot
menu-2-0 = power off
menu-2-0-exec = sudo poweroff
menu-2-1 = cancel
menu-2-1-exec = menu-open-0


[settings]
screenchange-reload = true
;compositing-background = xor
;compositing-background = screen
;compositing-foreground = source
;compositing-border = over
;pseudo-transparency = false


[global/wm]
margin-top = 5
margin-bottom = 5
; vim:ft=dosini
[1, 2, 3, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0]
../../.git/annex/objects/0P/pf/SHA256E-s46847--0e07f159b2fe58342be08d57fdb01b1d978c46975fe46954680e143fdc61a81b.sb2/SHA256E-s46847--0e07f159b2fe58342be08d57fdb01b1d978c46975fe46954680e143fdc61a81b.sb2../../.git/annex/objects/0P/pf/SHA256E-s46847--0e07f159b2fe58342be08d57
fdb01b1d978c46975fe46954680e143fdc61a81b.sb2/SHA256E-s46847--0e07f159b2fe58342be08d57fdb01b1d978c46975fe46954680e143fdc61a81b.sb2Ǿ
߻OWvdjǸTШ|ǨtǤh
߻OWvdjǸTШ|sҺӤh
g
O_߫nꤤƾǱЮv(1996.8~1998.7)
O_߫nꤤqЮv(1998.8~1999.7)
O_߫n䰪TЮv(1999.7~)
Ш|T޷ױЬѼfwe(2006.8~2016.12)
Ш|TǬ줤ߺؤlЮv(2005.2~2015.12)
O_ۥѳnୱ��α��ʤεoipջɭ(2008.4~2016.12)Ǿ
߻OWvdjǸTШ|ǨtǤh
߻OWvdjǸTШ|sҺӤh
g
O_߫nꤤƾǱЮv(1996.8~1998.7)
O_߫nꤤqЮv(1998.8~1999.7)
O_߫n䰪TЮv(1999.7~)
Ш|T޷ױЬѼfwe(2006.8~2016.12)
Ш|TǬ줤ߺؤlЮv(2005.2~2015.12)
O_ۥѳnୱ��α��ʤεoipջɭ(2008.4~2016.12)<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>

  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Packing material fee calculation for Austria | WIKA Documentation </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Packing material fee calculation for Austria | WIKA Documentation ">
    <meta name="generator" content="docfx 2.58.0.0">

    <link rel="shortcut icon" href="../../../../favicon.ico">
    <link rel="stylesheet" href="../../../../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../../../../styles/docfx.css">
    <link rel="stylesheet" href="../../../../styles/main.css">
    <meta property="docfx:navrel" content="../../../../toc.html">
    <meta property="docfx:tocrel" content="../../../toc.html">

    <meta property="docfx:rel" content="../../../../">

  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>

        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>

              <a class="navbar-brand" href="../../../../index.html">
                <img id="logo" class="svg" src="../../../../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>

        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">

        <div id="search-results">
          <div class="search-list">Search Results for <span></span></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">

        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">
<h1 id="packing-material-fee-calculation-for-austria" sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="28">Packing material fee calculation for Austria</h1>

[!include[banner](../includes/banner.md)]
<p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="32">This topic provides information about packing material rates and fees in Austria.</p>
<p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="34">In Europe, there are regulations about packaging waste. These regulations work on the principle of &quot;collective produce
r responsibility.&quot; In other words, they enforce the requirement that producers or sellers of packaging take responsibility for the environmental impact of that packaging. According to the regulations, producers are obligated to pay a portion of the cost of recoverin
g and recycling their packaging. This payment is known as a packing material fee<em>,</em> and it's paid periodically to a recycling company. A company should calculate the weight of each type of packing material (paper, plastic, metal, and so on) that was used during a
sale or purchase, and multiply that weight by the package material rate. The government provides the package material rate for each type of packing material. In Austria, a more complex formula for is used for packing material fees. Packing materials are divided into vari
ous categories (for example, Household and Commercial), and the government provides tax rates for packing materials in each category. The category that packing material belongs to depends on size and the products that the packaging was used for. Packing material fees are
 calculated and reported, but no ledger transactions are posted automatically, because the fees aren't considered taxes that must be paid to an authority.</p>
<h2 id="prerequisites" sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="36">Prerequisites</h2>
<table>
<colgroup>
<col width="50%">
<col width="50%">
</colgroup>
<thead>
<tr class="header">
<th>Prerequisite</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Category hierarchies</td>
<td>You must create category hierarchies for products. For each category hierarchy, you must create nodes that will be used as product groups for the calculation of packing material fees. You must create a category hierarchy type for packing materials and set the categor
y hierarchy to <strong>Packing</strong>. <strong></strong> <strong>Note:</strong> You can set up a packing category hierarchy for only one category hierarchy type. After you create category hierarchies, follow these steps to associate each product with a category hierarc
hy.
<ol>
<li>On the <strong>Products</strong> page, select a product in the list.</li>
<li>On the <strong>Product</strong> tab, click <strong>Product categories</strong>.</li>
</ol></td>
</tr>
<tr class="even">
<td>Packing classes</td>
<td>Create or maintain packaging classes for the calculation of packing material fees.</td>
</tr>
<tr class="odd">
<td>Tariff categories</td>
<td>Create or maintain tariff categories for the calculation of packing material fees.</td>
</tr>
<tr class="even">
<td>Packing materials code</td>
<td>Create packing material codes for each type of packing material that is defined.</td>
</tr>
<tr class="odd">
<td>Packing materials fee</td>
<td>Specify packing material fees for each packing material code. For each type of material, define the period of validity, tariff category, price per material, currency, and unit.</td>
</tr>
<tr class="even">
<td>Packaging material allocation</td>
<td>Define which materials are included in a packing unit, so that you can assign weights and view the total number of items that are contained in the packing unit. You can define packing units for individual items, for packaging groups, or for all items. <strong>Note:</
strong> When you select the packing unit, you can load the packing unit and have the packing unit quantity calculated automatically on sales order lines. However, the calculation can be done automatically only if the packing unit is the same unit that is specified on the
 sales order lines.</td>
</tr>
<tr class="odd">
<td>Allocation by tariff categories</td>
<td>Set up rules to define how packing material transactions should be allocated to tariff categories. For each combination of a product group, a packing class, and a packing code, you can set up one or more tariff categories that include quotations (as a percentage). Th
e sum of quotations for each combination should equal 100 percent.</td>
</tr>
</tbody>
</table>
<h2 id="manually-create-packing-material-transactions" sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="84">Manually create packing material transactions</h2>
<p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="85">Follow these steps to create packing material transactions for an invoiced sales order or purchase order:</p>
<ol sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="87">
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="87"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" s
ourcestartlinenumber="87">On the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="87">Packing material transactions</strong> page, click <strong sourcefile="ProcessDoku/02
_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="87">New</strong>, and enter the following information on the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packin
g-material-fee-calculation.md" sourcestartlinenumber="87">Create packing material transaction</strong> page:</p>
<ul sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="88">
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="88">Select an invoice line in the list.</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="89">Select a packing material code from the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/em
ea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="89">Packing material code</strong> drop-down list.</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="90">Select a packing class from the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-p
acking-material-fee-calculation.md" sourcestartlinenumber="90">Packing class</strong> drop-down list.</li>
</ul>
</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="92"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" s
ourcestartlinenumber="92">Click <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="92">OK</strong>.</p>
</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="93"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" s
ourcestartlinenumber="93">Select the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="93">Calculate fee</strong> check box to calculate the packing material fee component
of the sales order line for reporting.</p>
</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="94"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" s
ourcestartlinenumber="94">Optional: Update the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="94">Packing unit</strong>, <strong sourcefile="ProcessDoku/02_SupportProces
ses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="94">Packing unit quantity</strong>, and <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sour
cestartlinenumber="94">Packing unit weight</strong> fields.</p>
</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="95"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" s
ourcestartlinenumber="95">Click <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="95">Save</strong>.</p>
</li>
</ol>
<h2 id="create-packing-material-transactions-from-sales-orders-and-purchase-orders" sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="97">Create packing material transactions from
sales orders and purchase orders</h2>
<p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="98">Packing material weights and fees are calculated for sales order lines and purchase order lines. In the line details for ea
ch line, you can specify the packing unit and the packing unit quantity. When a sales order line is invoiced, packing material transactions are created, and the packing material weights are calculated. Packing material fees aren't calculated when the invoice is posted, a
nd they aren't invoiced. <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="98">Note:</strong> If a packing unit has been assigned to the item on the selected sales order li
ne, the packing unit and packing unit quantity are loaded automatically. In this case, the quantity is calculated as the ordered quantity (in inventory units) divided by the packing unit factor. When the sales order line is posted, the packing unit and packing unit quant
ity are taken from the sales order line. However, you can change the values on the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="98">Posting invoice</strong> page on th
e <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="98">Line details</strong> tab. It's relevant when the sales order is partially invoiced.</p>
<h2 id="calculate-packing-material-fees" sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="100">Calculate packing material fees</h2>
<p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="101">Use the Packing material calculation journal to calculate packing material fees and print the <strong sourcefile="ProcessD
oku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="101">Packing materials fees</strong> report.</p>
<ol sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="103">
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="103"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md"
sourcestartlinenumber="103">Click <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="103">New</strong>, and enter the following information:</p>
<ul sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="104">
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="104"><strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation
.md" sourcestartlinenumber="104">Date from</strong> – Specify the start date of the journal.</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="105"><strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation
.md" sourcestartlinenumber="105">Date to</strong> – Specify the end date of the journal.</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="106"><strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation
.md" sourcestartlinenumber="106">Save details</strong> – Select this check box if you want to review calculation details.</li>
</ul>
</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="108"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md"
sourcestartlinenumber="108">Click <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="108">Lines</strong>. The <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finan
ce/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="108">Journal lines</strong> page appears and shows the aggregated data (grouped by tariff category and packing materials code).</p>
</li>
<li sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="109"><p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md"
sourcestartlinenumber="109">Click <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="109">Calculation details</strong> to open the <strong sourcefile="ProcessDoku/02_Support
Processes/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="109">Calculation details</strong> page, where all data about all transactions for the journal period is allocated to the various tariff categories.</p>
</li>
</ol>
<h2 id="print-the-packing-materials-fee-calculation-report" sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="111">Print the Packing materials fee calculation report</h2>
<p sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="112">The <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations/emea-aut-packing-material-fee-calculat
ion.md" sourcestartlinenumber="112">Packing materials fee calculation</strong> report contains information about packing materials fees that were calculated by using Austrian rules. To print this report, on the <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Fi
nance/localizations/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="112">Packing material calculation journal</strong> page, select the calculated journal, and then click <strong sourcefile="ProcessDoku/02_SupportProcesses/02_01_Finance/localizations
/emea-aut-packing-material-fee-calculation.md" sourcestartlinenumber="112">Print report</strong>.</p>
<section class="row" sourcefile="ProcessDoku/02_SupportProcesses/includes/footer-banner.md" sourcestartlinenumber="1">
<div class="column" sourcefile="ProcessDoku/02_SupportProcesses/includes/footer-banner.md" sourcestartlinenumber="2">
<!-- ![Universal Windows Platform (UWP).](images/platform-uwp.png)  -->
<p sourcefile="ProcessDoku/02_SupportProcesses/includes/footer-banner.md" sourcestartlinenumber="5">Submit your requests to the <a href="mailto:tobias.goldhammer@wika.com" sourcefile="ProcessDoku/02_SupportProcesses/includes/footer-banner.md" sourcestartlinenumber="5">Do
cumentation Team</a></p>
</div>
</section>
</article>
          </div>

          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>

      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            <span>Customized Footer</span>

          </div>
        </div>
      </footer>
    </div>

    <script type="text/javascript" src="../../../../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../../../../styles/docfx.js"></script>
    <script type="text/javascript" src="../../../../styles/main.js"></script>
  </body>
</html>
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
subsystem
rule_type:  prefix
index_type:  hybrid
external:  len_names
compressed:  no
rule_file:  g2378a.rl2
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using System.IO;
//using log4net;
using System.Reflection;
using log4net;
using jwt.CodeGen;
namespace Jwtex
{
    public class jwtApp
    {
        public string Name { get; set; }

        public jwtApp()
        {
            this.Name = "app";
        }
        private Dictionary<string, Layout> _layouts = new Dictionary<string, Layout>();
        public Dictionary<string, Layout> GetLayout() { return _layouts; }
        public Dictionary<string, Navigation> GetNavigation() { return _navigations; }
        public Layout Layout
        {
            set
            {
                if (!_layouts.ContainsKey(value.LayoutName))
                {
                    _layouts[value.LayoutName] = value;
                }
            }
        }
        public List<Layout> UILayouts { get; set; }
        public List<Navigation> UINavigations { get; set; }
        private Dictionary<string, Navigation> _navigations = new Dictionary<string, Navigation>();
        public Navigation Navigation
        {
            set
            {
                if (!_navigations.ContainsKey(value.NavigationName))
                {
                    _navigations[value.NavigationName] = value;
                }
            }
        }
        public void Execute()
        {
            new CodeGen(this).Execute();

        }
    }

    public class Layout
    {
        public string LayoutName { get; set; }
        public string Extend { get; set; }

        public string _id { get; set; }
    }
    public class Navigation
    {
        public string _id { get; set; }
        public string NavigationName { get; set; }
        public string HasLayout { get; set; }
        public string ParamName { get; set; }
        public string WidgetName { get; set; }
        private Dictionary<string, View> _views = new Dictionary<string, View>();
        public List<View> UIViews { get; set; }
        public Dictionary<string, View> GetView() { return _views; }
        public View View
        {
            set
            {
                if (!_views.ContainsKey(value.ViewName))
                {
                    _views[value.ViewName] = value;
                }
            }
        }

    }
    public class View
    {
        public string ViewName { get; set; }
        public string WidgetName { get; set; }
    }

    public class CodeGen
    {
        private static readonly ILog log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);
        private static object locker = new Object();
        private const string TAB1 = "\t";
        private const string TAB2 = "\t\t";
        private const string TAB3 = "\t\t\t";
        private const string TAB4 = "\t\t\t\t";
        public string Root { get; set; }
        public string PathString { get; set; }

        private Dictionary<string, string> navList = new Dictionary<string, string>();
        public CodeGen(jwtApp app)
        {
            this.App = app;
            this.Root = AppDomain.CurrentDomain.BaseDirectory;
        }
        public CodeGen()
        {

        }
        private List<String> mControllers = new List<string>();
        private List<String> layoutControllers = new List<string>();
        public jwtApp App { get; set; }
        public string DefaultNavigation { get; set; }
        public void Execute()
        {
            lock (locker)
            {
                JwtFile file = new JwtFile();
                file.CreateDirectory(Root + "Scripts");
                file.CreateDirectory(Root + "Scripts\\Components");
                file.CreateDirectory(Root + "Scripts\\Layouts");

                StringBuilder sb = new StringBuilder();
                sb.AppendLine();
                sb.Append("export default function config(stateprovider, routeProvider){");
                if (!string.IsNullOrEmpty(DefaultNavigation))
                {
                    sb.AppendLine();
                    sb.AppendFormat(TAB1 + "routeProvider.otherwise('{0}');", DefaultNavigation);
                    sb.AppendLine();
                }
                SetLayout(sb);
                SetNavigation(sb);
                sb.AppendLine();
                sb.Append("}");
                sb.AppendLine();
                sb.Append("config.$inject=['$stateProvider', '$urlRouterProvider'];");
                sb.AppendLine();
                file.Write(this.Root + "Scripts\\config.js", sb.ToString());


                GenAllControllers();
                GenAllServices();
                GenAppDirectives();
            }
        }
        private void GenAppDirectives()
        {
            DirectoryInfo dir = new DirectoryInfo(Root + "Scripts\\Directives");
            StringBuilder import = new StringBuilder();
            StringBuilder builder = new StringBuilder();
            StringBuilder componentsCSS = new StringBuilder();
            foreach (var item in dir.GetDirectories())
            {
                import.AppendFormat("import {0} from 'Scripts/Directives/{0}/{0}.js';", item.Name);
                import.AppendLine();

                builder.AppendFormat(".directive('{0}', {0}.builder)", item.Name);
                builder.AppendLine();
                if (System.IO.File.Exists(string.Format(Root + "Scripts/Directives/{0}/{0}.css", item.Name)))
                {
                    componentsCSS.AppendFormat("@import '../Scripts/Directives/{0}/{0}.css';", item.Name);
                    componentsCSS.AppendLine();
                }
            }

            StringBuilder res = new StringBuilder();
            res.Append(import);
            res.AppendLine();
            res.AppendLine();
            res.Append("var moduleName='app.Directives';");
            res.AppendLine();
            res.AppendLine();
            res.Append("angular.module(moduleName, [])");
            res.AppendLine();
            res.Append(builder);
            res.Append(";");
            res.AppendLine();
            res.AppendLine();
            res.Append("export default moduleName;");
            System.IO.File.WriteAllText(Root + "Scripts\\app.directives.js", res.ToString());
            System.IO.File.WriteAllText(Root + "Content\\components.css", componentsCSS.ToString());
        }
        private void GetNamArr(StringBuilder sb)
        {
            bool isFirst = true;
            foreach (var item in navList.Values)
            {
                if (!isFirst) { sb.Append(','); }
                sb.Append(item);
                isFirst = false;
            }
        }
        private void SetLayout(StringBuilder sb)
        {
            JwtFile file = new JwtFile();
            foreach (Layout item in App.GetLayout().Values)
            {
                file.CreateDirectory(Root + "Scripts\\Layouts\\" + item.LayoutName);
                sb.AppendLine();
                sb.Append(TAB1);
                sb.AppendFormat("stateprovider.state('{0}'", GetStateName(item));
                sb.Append(",{abstract:true,");
                sb.AppendFormat(@"url:'/{0}'", item.LayoutName);

                PathString = Root + string.Format("Scripts\\Layouts\\{0}\\{0}.html", item.LayoutName);
                if (!file.FileExists(PathString))
                {
                    file.Write(PathString, string.Format("<h3>Layout Name : {0}</h3><div ui-view></div>", item.LayoutName));
                }
                sb.AppendFormat(",templateUrl:'Scripts/Layouts/{0}/{0}.html'", item.LayoutName);


                PathString = Root + string.Format("Scripts\\Layouts\\{0}\\{0}Ctrl.js", item.LayoutName);
                if (!file.FileExists(PathString))
                {
                    file.Write(PathString, getEmptyControllerForLayout(item.LayoutName));
                }
                sb.AppendFormat(",controller:'{0}Ctrl as vm'", item.LayoutName);
                layoutControllers.Add(item.LayoutName);

                sb.Append("});");
            }

        }

        private void SetNavigation(StringBuilder sb)
        {
            JwtFile file = new JwtFile();
            sb.AppendLine();
            foreach (var item in App.GetNavigation().Values)
            {
                file.CreateDirectory(Root + "Scripts\\Components\\" + item.WidgetName);
                sb.AppendLine();
                sb.Append(TAB1);
                sb.AppendFormat("stateprovider.state('{0}'", GetStateName(item));
                sb.Append(",{");
                sb.AppendFormat(@"url:'/{0}{1}'", item.NavigationName, string.IsNullOrEmpty(item.ParamName) ? "" : GetParamName(item.ParamName));

                var view = item.GetView();
                if (view != null && item.GetView().Count > 0)
                {
                    sb.Append(",views:{");
                    bool isFirst = true;
                    foreach (var item2 in view.Values)
                    {
                        if (isFirst)
                            sb.Append("'" + item2.ViewName + "':{");
                        else
                            sb.Append(",'" + item2.ViewName + "':{");
                        if (!string.IsNullOrEmpty(item2.WidgetName))
                        {
                            PathString = Root + string.Format("Scripts\\Components\\{0}\\{0}.html", item2.WidgetName);
                            if (!file.FileExists(PathString))
                            {
                                file.Write(PathString, "<h3>widget Name : {{vm.title}}</h3>");
                            }
                            sb.AppendFormat("templateUrl:'Scripts/Components/{0}/{0}.html'", item2.WidgetName);
                            mControllers.Add(item2.WidgetName);

                            PathString = Root + string.Format("Scripts\\Components\\{0}\\{0}Ctrl.js", item2.WidgetName);
                            if (!file.FileExists(PathString))
                            {
                                file.Write(PathString, getEmptyController(item2.WidgetName));
                            }
                            PathString = Root + string.Format("Scripts\\Components\\{0}\\{0}Svc.js", item2.WidgetName);
                            if (!file.FileExists(PathString))
                            {
                                file.Write(PathString, getEmptyService(item2.WidgetName));
                            }
                            sb.AppendFormat(",controller:'{0}Ctrl as vm'", item2.WidgetName);
                        }
                        sb.Append("}");
                        isFirst = false;
                    }
                    sb.Append("}");
                }
                if (!string.IsNullOrEmpty(item.WidgetName))
                {
                    PathString = Root + string.Format("Scripts\\Components\\{0}\\{0}.html", item.WidgetName);
                    if (!file.FileExists(PathString))
                    {
                        file.Write(PathString, "<h3>widget Name : {{vm.title}}</h3>");
                    }
                    sb.AppendFormat(",templateUrl:'Scripts/Components/{0}/{0}.html'", item.WidgetName);
                    PathString = Root + string.Format("Scripts\\Components\\{0}\\{0}Ctrl.js", item.WidgetName);
                    if (!file.FileExists(PathString))
                    {
                        file.Write(PathString, getEmptyController(item.WidgetName));
                    }
                    PathString = Root + string.Format("Scripts\\Components\\{0}\\{0}Svc.js", item.WidgetName);
                    if (!file.FileExists(PathString))
                    {
                        file.Write(PathString, getEmptyService(item.WidgetName));
                    }
                    sb.AppendFormat(",controller:'{0}Ctrl as vm'", item.WidgetName);
                    mControllers.Add(item.WidgetName);
                }

                sb.Append("});");
            }

        }

        private string GetParamName(string p)
        {
            if (p.StartsWith("/:")) return p;
            if (p.StartsWith(":")) return '/' + p;
            return "/:" + p;
        }

        private void GenAllControllers()
        {
            var list = mControllers.Distinct();
            StringBuilder sb = new StringBuilder();
            var directoryName = "Components";
            foreach (var item in list)
            {
                sb.AppendLine();
                sb.AppendFormat("import {0} from 'Scripts/{1}/{0}/{0}Ctrl.js';", item, directoryName);
            }
            list = layoutControllers.Distinct();
            directoryName = "Layouts";
            foreach (var item in list)
            {
                sb.AppendLine();
                sb.AppendFormat("import {0} from 'Scripts/{1}/{0}/{0}Ctrl.js';", item, directoryName);
            }
            sb.AppendLine();
            sb.AppendLine();
            sb.AppendFormat("var moduleName='{0}.controllers';", this.App.Name);
            sb.AppendLine();
            sb.AppendLine();
            sb.Append("angular.module(moduleName,[])");
            list = mControllers.Distinct();
            foreach (var item in list)
            {
                sb.AppendLine();
                sb.AppendFormat(".controller('{0}Ctrl', {0})", item);
            }
            list = layoutControllers.Distinct();
            foreach (var item in list)
            {
                sb.AppendLine();
                sb.AppendFormat(".controller('{0}Ctrl', {0})", item);
            }
            sb.Append(";");
            sb.AppendLine();
            sb.AppendLine();
            sb.Append("export default moduleName;");
            File.WriteAllText(Root + "Scripts\\app.controllers.js", sb.ToString());
        }

        private void GenAllServices()
        {
            var list = mControllers.Distinct();
            StringBuilder sb = new StringBuilder();
            var directoryName = "Components";
            foreach (var item in list)
            {

